;;;; list-queues.import.scm - GENERATED BY CHICKEN 4.9.0.1 -*- Scheme -*-

(eval '(import
         scheme
         (only chicken include define-record-type case-lambda error)))
(##sys#register-compiled-module
  'list-queues
  (list)
  '((make-list-queue . list-queues#make-list-queue)
    (list-queue . list-queues#list-queue)
    (list-queue-copy . list-queues#list-queue-copy)
    (list-queue-unfold . list-queues#list-queue-unfold)
    (list-queue-unfold-right . list-queues#list-queue-unfold-right)
    (list-queue? . list-queues#list-queue?)
    (list-queue-empty? . list-queues#list-queue-empty?)
    (list-queue-front . list-queues#list-queue-front)
    (list-queue-back . list-queues#list-queue-back)
    (list-queue-add-front! . list-queues#list-queue-add-front!)
    (list-queue-add-back! . list-queues#list-queue-add-back!)
    (list-queue-remove-front! . list-queues#list-queue-remove-front!)
    (list-queue-remove-back! . list-queues#list-queue-remove-back!)
    (list-queue-remove-all! . list-queues#list-queue-remove-all!)
    (list-queue-clear! . list-queues#list-queue-clear!)
    (list-queue-length . list-queues#list-queue-length)
    (list-queue-append . list-queues#list-queue-append)
    (list-queue-append! . list-queues#list-queue-append!)
    (list-queue-concatenate . list-queues#list-queue-concatenate)
    (list-queue-map . list-queues#list-queue-map)
    (list-queue-map! . list-queues#list-queue-map!)
    (list-queue-for-each . list-queues#list-queue-for-each)
    (list-queue-list . list-queues#list-queue-list)
    (list-queue-set-list! . list-queues#list-queue-set-list!)
    (list-queue-first-last . list-queues#list-queue-first-last))
  (list)
  (list))

;; END OF FILE
